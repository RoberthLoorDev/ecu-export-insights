---
import DoughnutPetroGraph from "./DoughnutPetroGraph.astro";
import PieTraditionalGraph from "./PieTraditionalGraph.astro";
---

<div class="col-span-2 flex flex-col rounded-2xl border-2 border-[#E7EBF1] bg-white p-5">
     <h3 class="">Categor√≠as de productos mas exportados</h3>
     <canvas id="id_monthlyBarsChart" class="max-h-[15rem]"></canvas>
     <div class="relative flex justify-between gap-4">
          <PieTraditionalGraph />
          <DoughnutPetroGraph />
     </div>
</div>

<script>
     import { Chart } from "chart.js/auto";
     import { getMostExportedProductsBar } from "../../data/BarCategoriesTrendsData";
     import { formattAmountsMoney, abbreviateNumberAmount } from "../../utils/utils";

     const { onlyCategories, onlyValues } = getMostExportedProductsBar("03");

     document.addEventListener("astro:page-load", () => {
          const ctx = document.getElementById("id_monthlyBarsChart") as HTMLCanvasElement;
          if (!ctx) return;

          new Chart(ctx, {
               type: "bar",
               data: {
                    labels: onlyCategories,
                    datasets: [
                         {
                              data: onlyValues,
                              backgroundColor: ["#039de3", "#2364AA", "#73BFB8", "#FEC601", "#EA7317", "#EA7317"],
                              borderColor: ["#039de3", "#2364AA", "#73BFB8", "#FEC601", "#EA7317", "#EA7317"],

                              borderWidth: 2,
                              borderRadius: 5,
                              barPercentage: 0.9,
                         },
                    ],
               },
               options: {
                    layout: {},
                    plugins: {
                         title: {
                              display: true,
                              text: "Ingresos generados",
                              font: {
                                   size: 16,
                                   weight: 600,
                              },
                         },
                         legend: {
                              display: false,
                         },

                         tooltip: {
                              callbacks: {
                                   label: function (context: any) {
                                        return formattAmountsMoney(context.raw);
                                   },
                              },
                              intersect: false,
                              titleFont: {
                                   size: 16,
                              },
                              bodyFont: {
                                   size: 14,
                              },
                         },
                    },
                    indexAxis: "y",
                    maintainAspectRatio: true,
                    scales: {
                         x: {
                              ticks: {
                                   callback: function (value) {
                                        return abbreviateNumberAmount(Number(value));
                                   },
                                   font: {
                                        size: 16,
                                   },
                              },
                         },
                         y: {
                              ticks: {
                                   font: {
                                        size: 16,
                                   },
                              },
                              beginAtZero: true,
                         },
                    },
                    responsive: true,
               },
          });
     });
</script>
